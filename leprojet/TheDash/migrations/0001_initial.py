# Generated by Django 4.2.2 on 2023-07-10 13:48

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AirtimeErsNotInCs16',
            fields=[
                ('ma_cle_primaire', models.AutoField(primary_key=True, serialize=False)),
                ('dates', models.CharField(blank=True, db_column='DATES', max_length=255, null=True)),
                ('heure', models.CharField(blank=True, db_column='HEURE', max_length=255, null=True)),
                ('ersreference', models.CharField(blank=True, db_column='ERSREFERENCE', max_length=255, null=True)),
                ('requestamountvalue', models.CharField(blank=True, db_column='REQUESTAMOUNTVALUE', max_length=255, null=True)),
                ('receivermsisdn', models.CharField(blank=True, db_column='RECEIVERMSISDN', max_length=255, null=True)),
                ('sendermsisdn', models.CharField(blank=True, db_column='SENDERMSISDN', max_length=255, null=True)),
                ('resultcode', models.CharField(blank=True, db_column='RESULTCODE', max_length=255, null=True)),
                ('resultstatus', models.CharField(blank=True, db_column='RESULTSTATUS', max_length=255, null=True)),
                ('id', models.CharField(blank=True, max_length=255, null=True)),
                ('id2', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'AIRTIME_ERS_NOT_IN_CS16',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PeerToPeerSdpBalanceTransferReconciliation',
            fields=[
                ('ma_cle_primaire', models.AutoField(primary_key=True, serialize=False)),
                ('dw_date_key', models.IntegerField(blank=True, null=True)),
                ('total_transitionfee', models.BigIntegerField(blank=True, db_column='Total_TransitionFee', null=True)),
                ('total_transferamount', models.BigIntegerField(blank=True, db_column='Total_Transferamount', null=True)),
                ('total_chargefromprepaid', models.BigIntegerField(blank=True, db_column='Total_ChargeFromPrepaid', null=True)),
                ('gap', models.BigIntegerField(blank=True, db_column='Gap', null=True)),
            ],
            options={
                'db_table': 'Peer_to_Peer_SDP_Balance_Transfer_Reconciliation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResumeBundleErsCs16',
            fields=[
                ('ma_cle_primaire', models.AutoField(primary_key=True, serialize=False)),
                ('dateid', models.CharField(blank=True, db_column='DATEID', max_length=100, null=True)),
                ('ers_total', models.IntegerField(blank=True, db_column='ERS_TOTAL', null=True)),
                ('ers_amount', models.FloatField(blank=True, db_column='ERS_AMOUNT', null=True)),
                ('cs16_total', models.IntegerField(blank=True, db_column='CS16_TOTAL', null=True)),
                ('cs16_amount', models.FloatField(blank=True, db_column='CS16_AMOUNT', null=True)),
                ('gap_total', models.IntegerField(blank=True, db_column='GAP_TOTAL', null=True)),
                ('gap_amount', models.FloatField(blank=True, db_column='GAP_AMOUNT', null=True)),
            ],
            options={
                'db_table': 'RESUME_BUNDLE_ERS_CS16',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResumeTransactionsEwpErs',
            fields=[
                ('ma_cle_primaire', models.AutoField(primary_key=True, serialize=False)),
                ('dates', models.CharField(blank=True, max_length=10, null=True)),
                ('ewp_total', models.IntegerField(blank=True, null=True)),
                ('ewpamount', models.FloatField(blank=True, null=True)),
                ('ers_total', models.IntegerField(blank=True, null=True)),
                ('ersamount', models.FloatField(blank=True, null=True)),
                ('gap_total', models.IntegerField(blank=True, null=True)),
                ('gapamount', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'RESUME_TRANSACTIONS_EWP_ERS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TopBalanceReconciliation',
            fields=[
                ('ma_cle_primaire', models.AutoField(primary_key=True, serialize=False)),
                ('dump_date', models.IntegerField(blank=True, db_column='DUMP_DATE', null=True)),
                ('msisdn', models.TextField(blank=True, db_column='MSISDN', null=True)),
                ('balance', models.TextField(blank=True, db_column='BALANCE', null=True)),
            ],
            options={
                'db_table': 'Top_Balance_reconciliation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TopConsoVerification',
            fields=[
                ('ma_cle_primaire', models.AutoField(primary_key=True, serialize=False)),
                ('msisdn', models.TextField(blank=True, db_column='MSISDN', null=True)),
                ('conso', models.FloatField(blank=True, db_column='CONSO', null=True)),
                ('date', models.IntegerField(blank=True, db_column='DATE', null=True)),
            ],
            options={
                'db_table': 'Top_Conso_verification',
                'managed': False,
            },
        ),
    ]
